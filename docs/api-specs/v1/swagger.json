{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Login user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Logout user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset email sent if user exists"
          }
        },
        "summary": "Request password reset",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        },
        "summary": "Reset password with token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "operationId": "UsersController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_updateCurrentUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update current user profile",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_deleteCurrentUser",
        "parameters": [],
        "responses": {
          "204": {
            "description": "User account deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete current user account",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "operationId": "UsersController_listUsers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin only"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all users (Admin only)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin only"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user by ID (Admin only)",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Check overall application health",
        "tags": [
          "Health"
        ]
      }
    },
    "/api/v1/storage/upload": {
      "post": {
        "operationId": "StorageController_uploadFile",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "avatar",
                      "document",
                      "general"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file type or size"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Upload a file",
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/v1/storage/user/{userId}": {
      "get": {
        "operationId": "StorageController_listUserFiles",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List user files",
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/v1/storage/{fileId}": {
      "get": {
        "operationId": "StorageController_downloadFile",
        "parameters": [
          {
            "name": "fileId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File downloaded successfully"
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Download file",
        "tags": [
          "Storage"
        ]
      },
      "delete": {
        "operationId": "StorageController_deleteFile",
        "parameters": [
          {
            "name": "fileId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted successfully"
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete file",
        "tags": [
          "Storage"
        ]
      }
    },
    "/api/v1/ai/chat": {
      "post": {
        "operationId": "AiController_chat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Send chat message (non-streaming)",
        "tags": [
          "AI"
        ]
      }
    },
    "/api/v1/ai/embeddings": {
      "post": {
        "operationId": "AiController_generateEmbeddings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmbeddingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Embeddings generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmbeddingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Generate embeddings for text",
        "tags": [
          "AI"
        ]
      }
    },
    "/api/v1/ai/conversations": {
      "post": {
        "operationId": "AiController_createConversation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Conversation created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create new conversation",
        "tags": [
          "AI"
        ]
      },
      "get": {
        "operationId": "AiController_listConversations",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations retrieved"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List user conversations",
        "tags": [
          "AI"
        ]
      }
    },
    "/api/v1/ai/conversations/{id}": {
      "get": {
        "operationId": "AiController_getConversation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved"
          },
          "404": {
            "description": "Conversation not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get conversation with messages",
        "tags": [
          "AI"
        ]
      },
      "delete": {
        "operationId": "AiController_deleteConversation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Conversation deleted"
          },
          "404": {
            "description": "Conversation not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete conversation",
        "tags": [
          "AI"
        ]
      }
    },
    "/api/v1/ai/usage": {
      "get": {
        "operationId": "AiController_getUsageStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usage stats retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageStatsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user AI usage statistics",
        "tags": [
          "AI"
        ]
      }
    }
  },
  "info": {
    "title": "Backend API",
    "description": "Backend API Documentation with AI Integration",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "AI",
      "description": "AI chat, embeddings, and conversations"
    },
    {
      "name": "Storage",
      "description": "File upload and management"
    },
    {
      "name": "Health",
      "description": "Health check endpoints"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "Password123!",
            "minLength": 8
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "type": "object",
            "example": {
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "email": "user@example.com",
              "role": "USER"
            }
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "Password123!"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "example": "NewPassword123!",
            "minLength": 8
          }
        },
        "required": [
          "token",
          "password"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "object",
            "nullable": true
          },
          "lastName": {
            "type": "object",
            "nullable": true
          },
          "avatarUrl": {
            "type": "object",
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": [
              "USER",
              "ADMIN",
              "PREMIUM"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "totalTokensUsed": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "role",
          "isActive",
          "emailVerified",
          "totalTokensUsed",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "avatarUrl": {
            "type": "string",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "FileResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "originalName": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "category": {
            "type": "object",
            "nullable": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "filename",
          "originalName",
          "mimetype",
          "size",
          "url",
          "createdAt"
        ]
      },
      "ChatRequestDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Tell me about NestJS"
          },
          "conversationId": {
            "type": "string",
            "example": "uuid-of-conversation"
          },
          "model": {
            "type": "string",
            "example": "gpt-4",
            "default": "gpt-4"
          },
          "maxTokens": {
            "type": "number",
            "example": 4096,
            "default": 4096
          },
          "temperature": {
            "type": "number",
            "example": 0.7,
            "default": 0.7
          }
        },
        "required": [
          "message"
        ]
      },
      "ChatResponseDto": {
        "type": "object",
        "properties": {
          "conversationId": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "tokens": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "conversationId",
          "messageId",
          "content",
          "model",
          "tokens",
          "createdAt"
        ]
      },
      "EmbeddingRequestDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "example": "Text to embed"
          },
          "model": {
            "type": "string",
            "example": "text-embedding-3-small"
          }
        },
        "required": [
          "text"
        ]
      },
      "EmbeddingResponseDto": {
        "type": "object",
        "properties": {
          "embedding": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "model": {
            "type": "string"
          },
          "tokens": {
            "type": "number"
          }
        },
        "required": [
          "embedding",
          "model",
          "tokens"
        ]
      },
      "CreateConversationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "My AI Chat"
          }
        }
      },
      "ConversationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "messageCount": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "userId",
          "messageCount",
          "createdAt",
          "updatedAt"
        ]
      },
      "UsageStatsDto": {
        "type": "object",
        "properties": {
          "totalTokens": {
            "type": "number"
          },
          "conversationsCount": {
            "type": "number"
          },
          "messagesCount": {
            "type": "number"
          },
          "lastUsed": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "totalTokens",
          "conversationsCount",
          "messagesCount",
          "lastUsed"
        ]
      }
    }
  }
}